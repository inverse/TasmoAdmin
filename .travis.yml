tasmoadminsudo: 'required'

services:
  - 'docker'

language:
  - 'bash'

env:
  global:
    - IMAGE=raymondmm/tasmoadmin
    - QEMU_VERSION=v2.9.1-1

before_install:
    - mkdir tmp
    - ./.docker/docker.sh prepare

install: true

before_script:
    # Create _release and directory
    - mkdir _release
    # Set TASMOADMIN_VERSION
    - if [ ! -z "$TRAVIS_TAG" ]; then export TASMOADMIN_VERSION=$TRAVIS_TAG; else export TASMOADMIN_VERSION=$TRAVIS_BRANCH; fi

script:
    # Pack TasmoAdmin src to tar.gz
    - tar -zcf ./_release/tasmoadmin_${TASMOADMIN_VERSION}.tar.gz tasmoadmin

    # Pack TasmoAdmin XAMPP portable
    - cat portable/xampp.zip.part-* > portable/xampp.zip
    - unzip -q portable/xampp.zip -d ./tmp/
    - cp -R tasmoadmin ./tmp/xampp/htdocs/
    - >
        pushd tmp &&
        zip -q -r ../_release/tasmoadmin_${TASMOADMIN_VERSION}_xampp_portable.zip xampp/ &&
        popd

    # Build Docker images
    - ./.docker/docker.sh build
    # Test Docker images
    - ./.docker/docker.sh test

before_deploy:
    # Set files to upload to github
    - export RELEASE_TO_UPLOAD=$(ls ./_release/tasmoadmin_*.tar.gz)
    - export RELEASE_PORTABLE_TO_UPLOAD=$(ls ./_release/tasmoadmin_*_xampp_portable.zip)

deploy:
    # Deploy SonWeb release to github
    provider: releases
    api_key:
      - secure: "HMT4FaczsL2FxBlk85v8JT2KxdD7HPc6+mNbBN5S8iqOAk4sS8cmIIT4wdqUTEDgdVdf6fuHoWBZHNWPzBdvaKcIgVbpBJq9F+EcPv0b2dRgV0RZ0jnuqQ1ValqqhsbugiVtvtcpWbp7NHgMYkWEGGA+DksHI6YGDWj7BkcqFbwtITsp7uLH9SbxbfeZ7XYfMNpypi10KBgaEMxtQdOHKzCkzUKRgo7fNYOPzEtVNoaE8L7bc1Id94TmwL9XEoGaxPnrlKvgGdmY0WOUOF2t5y6/sKbENoQILdfaEnzwPQ8ChroACSmfhWTNe85g4BsAJJ9bE8UjajoGVCc2LQwj76ygpb1qp8OH9GqfhUDrkxkF2V0dj1SG8kEvvJF8Hj6pB2SR/auh99F2WcI8IoJX7+oiZNuAkfvnmALFOo+lWZIjD0TMu8HtrdxAziPMK3hp7sX4cK4o3xjDUNXDjes8aXq6370Jd/uZ182kVzL6hCmWH7UaSU5u0QXfGcRIzOlLMJRytH7jN5xRyr2D9ZCfvja0rPGyMEt2izLhfnbRCwQK1pQEL7yz9M9Okol3FIa+zH8KcDciATMN3ukt5gCheL5odcr2NvQvjWZwXr+G069tIfsTGL/gUMHHzyQw2ZkxJG0jDU7l4O5fNKBRwdVGopAYw0iWsdGrBEPpVTK1wF4="
    file:
      - "${RELEASE_TO_UPLOAD}"
      - "${RELEASE_PORTABLE_TO_UPLOAD}"
    skip_cleanup: true
    on:
      tags: true

after_deploy:
    # Push Docker images to Docker Hub
    # Docker Login
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    # Tag all images
    - ./.docker/docker.sh tag
    # Push all images
    - ./.docker/docker.sh push
    # Create and push manifest list
    - ./.docker/docker.sh manifest-list
    # Docker Logout
    - docker logout

# notify when things fail
notifications:
    email: true
