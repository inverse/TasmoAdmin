sudo: 'required'

services:
  - 'docker'

language:
  - 'bash'

env:
  global:
    - IMAGE=raymondmm/tasmoadmin
    - QEMU_VERSION=v2.9.1-1

before_install:
    - mkdir tmp
    - ./.docker/docker.sh prepare

install: true

before_script:
    # Create _release and directory
    - mkdir _release
    # Set TASMOADMIN_VERSION
    - if [ ! -z "$TRAVIS_TAG" ]; then export TASMOADMIN_VERSION=$TRAVIS_TAG; else export TASMOADMIN_VERSION=$TRAVIS_BRANCH; fi

script:
    # Pack TasmoAdmin src to tar.gz
    - tar -zcf ./_release/tasmoadmin_${TASMOADMIN_VERSION}.tar.gz tasmoadmin

    # Pack TasmoAdmin XAMPP portable
    - cat portable/xampp.zip.part-* > portable/xampp.zip
    - unzip -q portable/xampp.zip -d ./tmp/
    - cp -R tasmoadmin ./tmp/xampp/htdocs/
    - >
        pushd tmp &&
        zip -q -r ../_release/tasmoadmin_${TASMOADMIN_VERSION}_xampp_portable.zip xampp/ &&
        popd

    # Build Docker images
    - ./.docker/docker.sh build
    # Test Docker images
    - ./.docker/docker.sh test

before_deploy:
    # Set files to upload to github
    - export RELEASE_TO_UPLOAD=$(ls ./_release/tasmoadmin_*.tar.gz)
    - export RELEASE_PORTABLE_TO_UPLOAD=$(ls ./_release/tasmoadmin_*_xampp_portable.zip)

deploy:
    # Deploy SonWeb release to github
    provider: releases
    api_key:
      - secure: "c0FEWSr+F6WQtHkFPq5v0Ju8KqeNYH07CJ9s2+ABx/hZIIxAlYfH5NTJXTyQ13f6Fd1bjnw3a9nZuPNxEAXacz70CYX97ZnqB71J3VWJQjjTV/My1ULKsExFenIou4ldehPr0+mZ/RrzjhrAlfWOrbhkH0kbOfenXtMBAAWxORgQG1P8b4TJnGu1T0Pd1q2Q16BIS3Xpk1VmLgvHmGF6b1/tFv14bwZsc0DLJv2H5EGr52AtePpl+Z+aba1nHF1Q057H2YRLcJh0OoV+hffDc4g7YAbQX5dNzL7LD4wlsVsn9U2TgEDGF4HUWWUf/xkGeYG0sSMAmSiL4H1+2u8W/IWbRQxhjOcftAr6pZnj3QCuv3rsmkzHR/mCBQBrpLA9PWal+nVov5ODxi2ofo/lwNkQdUDLXkfkOV1wRHH4/h2QMpmAImwdVyU3fDhU9wCTJW1lldDRVsB7GHWJAwUWXdfWq/pN2VW2LM4FUn2NExSoO1sfns2/f8mxkqcAf1OLR9WJTUBRYr0TD3sCPnGZeVnr/EcM919iara8tsJ8FjQ/Bq2wSp6oOMgTxV3tmGEStSsU4BHC02MrpguVbOS1xhxaUxRgFJ8YJKZZbdPdJd2pkAqhhgm9ZB7uujOK6ad7sp8QSvIvuFVWBNamAV9io9UlK/uv7GA70gxY/HxynnA="
    file:
      - "${RELEASE_TO_UPLOAD}"
      - "${RELEASE_PORTABLE_TO_UPLOAD}"
    skip_cleanup: true
    on:
      tags: true

after_deploy:
    # Push Docker images to Docker Hub
    # Docker Login
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    # Tag all images
    - ./.docker/docker.sh tag
    # Push all images
    - ./.docker/docker.sh push
    # Create and push manifest list
    - ./.docker/docker.sh manifest-list
    # Docker Logout
    - docker logout

# notify when things fail
notifications:
    email: true
