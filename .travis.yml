tasmoadminsudo: 'required'

services:
  - 'docker'

language:
  - 'bash'

env:
  global:
    - IMAGE=raymondmm/tasmoadmin
    - QEMU_VERSION=v2.9.1-1

before_install:
    - mkdir tmp
    - ./.docker/docker.sh prepare

install: true

before_script:
    # Create _release and directory
    - mkdir _release
    # Set TASMOADMIN_VERSION
    - if [ ! -z "$TRAVIS_TAG" ]; then export TASMOADMIN_VERSION=$TRAVIS_TAG; else export TASMOADMIN_VERSION=$TRAVIS_BRANCH; fi

script:
    # Pack TasmoAdmin src to tar.gz
    - tar -zcf ./_release/tasmoadmin_${TASMOADMIN_VERSION}.tar.gz tasmoadmin

    # Pack TasmoAdmin XAMPP portable
    - cat portable/xampp.zip.part-* > portable/xampp.zip
    - unzip -q portable/xampp.zip -d ./tmp/
    - cp -R tasmoadmin ./tmp/xampp/htdocs/
    - >
        pushd tmp &&
        zip -q -r ../_release/tasmoadmin_${TASMOADMIN_VERSION}_xampp_portable.zip xampp/ &&
        popd

    # Build Docker images
    - ./.docker/docker.sh build
    # Test Docker images
    - ./.docker/docker.sh test

before_deploy:
    # Set files to upload to github
    - export RELEASE_TO_UPLOAD=$(ls ./_release/tasmoadmin_*.tar.gz)
    - export RELEASE_PORTABLE_TO_UPLOAD=$(ls ./_release/tasmoadmin_*_xampp_portable.zip)

deploy:
    # Deploy SonWeb release to github
    provider: releases
    api_key:
      - secure: "O8bs5cB4G/xnGb/gHQAt2+iPIiN8xAFsSiF38TMNE4c3Kr2xetgykN05jttgLzP/Ut/Ty6o+VEe3q50Y5ESmmHra3svcFUlJlkeab7HEwp0w2PTCV7+6D0kUi3RGHOIrMDfYtT38BAaKYe8y7cba7rYvHPw5ls4jH5UONR975gG+AaWUfmp78alyM5vj4hHQiLaZLXo/D3d76Ik/MvMIMSvXtoNpXa/HhJEMxbV2Q1lfc8dtQ+2wCl07uZp5pTy+g9hfEOecxeEYZrmLyc9dpfZnW0iiSb+X9W6pboLfjcJ1gjDG91h+AmNrhbw0a861sP2KtU2eCyn5UFUYRIAOfHEnCyuUHh3fPkbiWRLo4XzBniN1NPgGch0a4NA0j26oMDNYFEEt3R+6wSh6f6Ks7vzFlLkupvMx2rPNdz89EEOHZB4tHJMtDdcPvBTJiFcEDmGSzQdMRdVWGnoZ9oiuGUcfVjhBTXGuo0a3K7OERoFMcMyh0SAaKGk7HHPKX34b7dQ84rBLByXULRi4nI344i/kGVkAWJDknS/d6EMcZXkeCVN50Fj9jOKWOVl2Wn4XSavIl3mu2fGRlTJRKX5bmVzrus5BnHAxVVM/PZXxfP/yYK2rt2FynFhNUDbpPaVi/dQgXiD1GVqTYyHDKFjHjkckJBIZqclBzoZdNPUgks4="
    file:
      - "${RELEASE_TO_UPLOAD}"
      - "${RELEASE_PORTABLE_TO_UPLOAD}"
    skip_cleanup: true
    on:
      tags: true

after_deploy:
    # Push Docker images to Docker Hub
    # Docker Login
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    # Tag all images
    - ./.docker/docker.sh tag
    # Push all images
    - ./.docker/docker.sh push
    # Create and push manifest list
    - ./.docker/docker.sh manifest-list
    # Docker Logout
    - docker logout

# notify when things fail
notifications:
    email: true
